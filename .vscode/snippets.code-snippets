{
	// Place your ac-research-journal workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"New Page": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "newpage",
		"body": [
			"import { GetServerSidePropsContext, InferGetServerSidePropsType } from 'next';"
			"import { NextPageWithLayout } from '@/pages/_app';"
			"import VerticalLayout from '@/components/layouts/VerticalLayout';"
			""
			"const ${1:Home}: NextPageWithLayout<InferGetServerSidePropsType<typeof getServerSideProps>> = ({ a }) => {"
			"  return <div>${2:Hello World!}</div>;"
			"}"
			""
			"export async function getServerSideProps(ctx: GetServerSidePropsContext) {"
			"  return {"
			"	props: {"
			"	  a: 1,"
			"	},"
			"  }"
			"}"
			""
			"${1:Home}.getLayout = (page) => <VerticalLayout>{page}</VerticalLayout>"
			"export default ${1:Home}"
			
		],
		"description": "Log output to console"
	}
}